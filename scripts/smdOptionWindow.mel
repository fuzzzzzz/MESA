//************************************************//
// Credits : ValVeSoftware, Prall, Nicolas Kirsch
// website http://puppetmaster.net ©2013
//************************************************//

global proc int isSmdInfoDefined()
	{
	source "fixup";

	string $check[] = `ls smdInfo`;
	if (`size $check` == 0)
		return 0;

	smdInfoFixup;

	return 1;
	}


proc smdMakeScriptNode ()
	{
	// is there one already?
	string $check[] = `ls smdInfo`;
	if ( !isSmdInfoDefined() )
		{
		scriptNode -st 2 -name "smdInfo";
		addAttr -ln seperateBodyGroup -at bool  smdInfo;
		
		addAttr -ln smdType -at "enum" -en "Animation:Reference:"  smdInfo;
		addAttr -ln smdTarget -dt "string" smdInfo;
		addAttr -ln fullCompile -at bool smdInfo;
		addAttr -ln texPath -dt "string" smdInfo;
		
		addAttr -ln smdBreak -at bool smdInfo;
		addAttr -ln smdIdle -at bool smdInfo;
		addAttr -ln smdRef -at bool smdInfo;
		addAttr -ln smdPhy -at bool smdInfo;
		addAttr -ln smdFixTrans -at bool smdInfo;
		addAttr -ln smdFixCol -at bool smdInfo;
		
		addAttr -ln smdAni -at bool smdInfo;
		addAttr -ln smdAniName -dt "string" smdInfo;
		addAttr -ln smdAniStart -dt "string" smdInfo;
		addAttr -ln smdAniEnd -dt "string" smdInfo;
		addAttr -ln smdAniAdd -dt "string" smdInfo;
		
		addAttr -ln qcScale -dt "string" smdInfo;
		addAttr -ln qcStatic -at bool smdInfo;
		addAttr -ln qcAllowStatic -at bool smdInfo;
		addAttr -ln qcSurface -dt "string" smdInfo;
		addAttr -ln qcKey -dt "string" smdInfo;
		
		addAttr -ln qcHeader -dt "string" smdInfo;
		addAttr -ln qcFooter -dt "string" smdInfo;
		
		addAttr -ln qcMass -dt "string" smdInfo;
		
		addAttr -ln compile -at bool smdInfo;
		addAttr -ln Thumb -at bool smdInfo;
		addAttr -ln Tex -at bool smdInfo;
		addAttr -ln qcLOD -at bool smdInfo;
		
		
		
		setAttr smdInfo.seperateBodyGroup 0;
		setAttr smdInfo.fullCompile 1;
		setAttr smdInfo.smdIdle 1;
		setAttr smdInfo.smdRef 1;
		setAttr smdInfo.smdPhy 1;
		setAttr smdInfo.smdFixTrans 0;
		setAttr smdInfo.smdFixCol 0;
		
		setAttr smdInfo.smdAniName -type "string" "idle§#";
		setAttr smdInfo.smdAniStart -type "string" "0§#";
		setAttr smdInfo.smdAniEnd -type "string" "1§#";
		setAttr smdInfo.smdAniAdd -type "string" "loop fps 30§#";
		
		setAttr smdInfo.qcScale -type "string" "1";
		setAttr smdInfo.qcStatic 0;
		setAttr smdInfo.qcAllowStatic 0;
		setAttr smdInfo.qcSurface -type "string" "default";
		setAttr smdInfo.qcKey -type "string" "--None--"; //"Wooden.Large"
		setAttr smdInfo.qcMass -type "string" "1";
		setAttr smdInfo.compile 1;
		setAttr smdInfo.Thumb 0;
		setAttr smdInfo.Tex 1;
		setAttr smdInfo.qcLOD 0;
		//updatePaths;
		}
	
	
	
	}

global proc string stripName (string $filePath)
	{
	string $result;
	string $paths[];
	int $num = `tokenize $filePath "\\/" $paths`;
	$result = `substitute $paths[$num-1] $filePath ""`;
	return $result;
	}
	

global proc updatePaths ()
	{
	        
		string $fileName = `file -q -sceneName`;
		string $destination;
		string $textarget;
		global string $vmt_materials;
		global string $vmt_materialsrc;
		$destination = `substitute "/[Ss][Cc][Ee][Nn][Ee][Ss]/" $fileName "/modelsrc/"`;
		$destination = `substitute "\\.[Mm][AaBb]$" $destination ".smd"`;
		setAttr -type "string" smdInfo.smdTarget $destination;
		textField -e -tx `getAttr smdInfo.smdTarget` smd;
		$textarget = `substitute "/[Ss][Cc][Ee][Nn][Ee][Ss]/" $fileName "/materialsrc/"`;
		$textarget = `substitute "/materialsrc/.*" $textarget "/materialsrc/"`;
		setAttr -type "string" smdInfo.texPath $textarget;
		textField -e -tx $textarget tex;	
		
		string $smdPhy = `substitute ".[Ss][Mm][Dd]" $destination "_phy.smd"`;
		string $smdIdle = `substitute ".[Ss][Mm][Dd]" $destination "_idle.smd"`;
		
		string $output = " Physics Name:   "; // + $smdPhy;
			text -e -l $output phy;
		$output = " IDLE Name:       "; // + $smdIdle;
			text -e -l $output idle;

	}

global proc updateAni ()
	{
	int $lastsel[] = `textScrollList -q -sii aniName`;
	int $last = $lastsel[0];
	textScrollList -e -ra aniName;
	string $ani =`getAttr smdInfo.smdAniName`;
	string $lst[] = string2Array($ani);
	int $size = `size $lst`;
	for ($itm in $lst)
		{
		textScrollList -e -a $itm aniName;
		}
	
	if ($last != 0 && $last <= $size)
		{
		textScrollList -e -sii $last aniName;
		}
		
	}

global proc saveAniItem (int $item)
	{
	string $aniNameList[];
	string $aniStartList[];
	string $aniEndList[];
	string $aniAddList[];
	
	string $aniName = `getAttr smdInfo.smdAniName`;
	string $aniStart = `getAttr smdInfo.smdAniStart`;
	string $aniEnd = `getAttr smdInfo.smdAniEnd`;
	string $aniAdd = `getAttr smdInfo.smdAniAdd`;
		
	$aniNameList = string2Array($aniName);
	$aniStartList = string2Array($aniStart);
	$aniEndList = string2Array($aniEnd);
	$aniAddList = string2Array($aniAdd);
	
	$aniNameList[$item-1] = `textField -q -tx aniNameField`;
	$aniStartList[$item-1] =  `textField -q -tx aniStart`;
	$aniEndList[$item-1] = `textField -q -tx aniEnd`;
	$aniAddList[$item-1] = `textField -q -tx aniAdd`;
	
			
	$aniName = array2String($aniNameList);
	$aniStart = array2String($aniStartList);
	$aniEnd = array2String($aniEndList);
	$aniAdd = array2String($aniAddList);
	
	setAttr smdInfo.smdAniName -type "string" $aniName;
	setAttr smdInfo.smdAniStart  -type "string" $aniStart;
	setAttr smdInfo.smdAniEnd  -type "string" $aniEnd;
	setAttr smdInfo.smdAniAdd  -type "string" $aniAdd;
	
	updateAni;
	}

global proc addAniItem ()
	{
	string $aniName = `getAttr smdInfo.smdAniName`;
	string $aniStart = `getAttr smdInfo.smdAniStart`;
	string $aniEnd = `getAttr smdInfo.smdAniEnd`;
	string $aniAdd = `getAttr smdInfo.smdAniAdd`;
	
	string $itm = `textField -q -tx aniNameField`;
	string $match = `match $itm $aniName`;
	if ($match != $itm)
		{
		$aniName += $itm + "§#";
		$aniStart += `textField -q -tx aniStart` + "§#";
		$aniEnd += `textField -q -tx aniEnd` + "§#";
		$aniAdd += `textField -q -tx aniAdd` + "§#";
		}
	else
		{
		error "sequence name exists or empty";
		}
	
	setAttr smdInfo.smdAniName -type "string" $aniName;
	setAttr smdInfo.smdAniStart -type "string" $aniStart;
	setAttr smdInfo.smdAniEnd -type "string" $aniEnd;
	setAttr smdInfo.smdAniAdd -type "string" $aniAdd;
	
	
	updateAni;
	}
	
global proc delAniItem(int $item)
	{
	string $aniNameList[];
	string $aniStartList[];
	string $aniEndList[];
	string $aniAddList[];
	
	
	string $aniNameListNew[];
	string $aniStartListNew[];
	string $aniEndListNew[];
	string $aniAddListNew[];
	
	
	string $aniName = `getAttr smdInfo.smdAniName`;
	string $aniStart = `getAttr smdInfo.smdAniStart`;
	string $aniEnd = `getAttr smdInfo.smdAniEnd`;
	string $aniAdd = `getAttr smdInfo.smdAniAdd`;
	
	
	$aniNameList = string2Array($aniName);
	$aniStartList = string2Array($aniStart);
	$aniEndList = string2Array($aniEnd);
	$aniAddList = string2Array($aniAdd);
	
	
	int $cnt = 0;
	int $cnt1 = 0;
	for ($n in $aniNameList)
		{
		if ($cnt != $item-1)
			{
			$aniNameListNew[$cnt1] = $aniNameList[$cnt];
			$aniStartListNew[$cnt1] = $aniStartList[$cnt];
			$aniEndListNew[$cnt1] = $aniEndList[$cnt];
			$aniAddListNew[$cnt1] = $aniAddList[$cnt];
			$cnt1++;
			}  
		$cnt ++;
		}
	
	$aniName = array2String($aniNameListNew);
	$aniStart = array2String($aniStartListNew);
	$aniEnd = array2String($aniEndListNew);
	$aniAdd = array2String($aniAddListNew);
	
	
	setAttr smdInfo.smdAniName -type "string" $aniName;
	setAttr smdInfo.smdAniStart -type "string" $aniStart;
	setAttr smdInfo.smdAniEnd -type "string" $aniEnd;
	setAttr smdInfo.smdAniAdd -type "string" $aniAdd;
	
	updateAni;
	
	}
	

global proc updateAniItem(int $item)
	{
	string $aniNameList[];
	string $aniStartList[];
	string $aniEndList[];
	string $aniAddList[];
	
	string $aniName = `getAttr smdInfo.smdAniName`;
	string $aniStart = `getAttr smdInfo.smdAniStart`;
	string $aniEnd = `getAttr smdInfo.smdAniEnd`;
	string $aniAdd = `getAttr smdInfo.smdAniAdd`;
		
	$aniNameList = string2Array($aniName);
	$aniStartList = string2Array($aniStart);
	$aniEndList = string2Array($aniEnd);
	$aniAddList = string2Array($aniAdd);
	
	textField -e -tx $aniNameList[$item-1] aniNameField;
	textField -e -tx $aniStartList[$item-1] aniStart;
	textField -e -tx $aniEndList[$item-1] aniEnd;
	textField -e -tx $aniAddList[$item-1] aniAdd;
	
	updateAni;
	}	

global proc updateNode ()
	{
	setAttr -type "string" smdInfo.smdTarget `textField -q -tx smd`;
	setAttr -type "string" smdInfo.texPath `textField -q -tx tex`;
	string $destination = `textField -q -tx smd`;
	string $smdPhy = `substitute ".[Ss][Mm][Dd]" $destination "_phy.smd"`;
	string $smdIdle = `substitute ".[Ss][Mm][Dd]" $destination "_idle.smd"`;
	string $output = "Physics Name:   " + $smdPhy;
	text -e -l $output phy;
	$output = "IDLE Name:       " + $smdIdle;
	text -e -l $output idle;
	}

global proc propList()
	{
	
	textScrollList -e -ra qcSurf;
	textScrollList -e 	-a "default" 
		-a "alienflesh" 
		-a "armorflesh" 
		-a "bloodyflesh"
		-a "boulder" 
		-a "brakingrubbertire" 
		-a "brick"
		-a "canister"
		-a "cardboard"
		-a "carpet"
		-a "ceiling_tile"
		-a "chain"
		-a "chainlink"
		-a "computer"
		-a "concrete"
		-a "concrete_block"
		-a "default_silent"
		-a "dirt"
		-a "flesh"
		-a "floating_metal_barrel"
		-a "foliage"
		-a "glass"
		-a "glassbottle"
		-a "grass"
		-a "gravel"
		-a "grenade"
		-a "ice"
		-a "item"
		-a "jeeptire"
		-a "ladder"
		-a "metal"
		-a "metal_barrel"
		-a "Metal_Box" 
		-a "metal_bouncy"
		-a "metalgrate" 
		-a "metalpanel"
		-a "metalvent" 
		-a "mud"
		-a "no_decal"
		-a "paintcan"
		-a "paper" 
		-a "papercup" 
		-a "plaster" 
		-a "plastic"
		-a "plastic_barrel"
		-a "plastic_barrel_buoyant"
		-a "Plastic_Box"
		-a "player" 
		-a "player_control_clip" 
		-a "popcan"
		-a "porcelain" 
		-a "pottery" 
		-a "quicksand"
		-a "rock"
		-a "roller"
		-a "rubber" 
		-a "rubbertire"
		-a "sand" 
		-a "slime" 
		-a "slipperymetal"
		-a "slipperyslime"
		-a "slidingrubbertire"
		-a "slidingrubbertire_front" 
		-a "slidingrubbertire_rear"
		-a "snow" 
		-a "solidmetal" 
		-a "tile" 
		-a "wade"
		-a "water"
		-a "watermelon"
		-a "weapon"
		-a "Wood"
		-a "Wood_Box" 
		-a "Wood_Crate" 
		-a "Wood_Furniture" 
		-a "Wood_lowdensity"
		-a "Wood_Panel" 
		-a "Wood_Plank"
		-a "Wood_Solid"
		qcSurf;

	if (`getAttr smdInfo.qcSurface` != "")
		{
		textScrollList -e -si `getAttr smdInfo.qcSurface` qcSurf; 
		}
	
	textScrollList -e -ra qcKey;
	textScrollList -e -a "--None--"
		-a "Cardboard.Small"
		-a "Cardboard.Medium"
		-a "Cardboard.Large"
		-a "Cloth.Small"
		-a "Cloth.Medium"
		-a "Cloth.Large"
		-a "Flesh.Tiny" 
		-a "Flesh.Small"
		-a "Glass.Small" 
		-a "Glass.Window"
		-a "Item.Small"
		-a "Item.Medium" 
		-a "Item.Large"  
		-a "Metal.Small" 
		-a "Metal.Medium"
		-a "Metal.Large" 
		-a "Plastic.Small" 
		-a "Plastic.Medium" 
		-a "Plastic.Large" 
		-a "Pottery.Small" 
		-a "Pottery.Medium" 
		-a "Pottery.Large"
		-a "Pottery.Huge" 
		-a "Stone.Small" 
		-a "Stone.Medium" 
		-a "Stone.Large"
		-a "Stone.Huge"
		-a "Wooden.Tiny"
		-a "Wooden.Small"
		-a "Wooden.Medium"
		-a "Wooden.Large"
		-a "Wooden.ExtraLarge"
		-a "Wooden.Huge" 
		qcKey;
	
	if (`getAttr smdInfo.qcKey` != "")
		{
		textScrollList -e -si `getAttr smdInfo.qcKey` qcKey; 
		}
		
	}

global proc vtaExport ()
	{
	//source smdOptionWindow;
	source smdExport;
	smdExport( 2, 0 );
	
	}
	
global proc smdOptionWindow ()
	{
	source "fixup";

	smdMakeScriptNode;
	
	int $oldSmdType;
	int $oldSeperateBodyGroup;
	string $oldSmdTarget;
	int $oldFullCompile;
	string $oldTexPath;


	$oldSmdType = `getAttr smdInfo.smdType`;
	$oldSeperateBodyGroup = `getAttr smdInfo.seperateBodyGroup`;
	$oldSmdTarget = `getAttr smdInfo.smdTarget`;
	$oldFullCompile = `getAttr smdInfo.fullCompile`;
	$oldTexPath = `getAttr smdInfo.texPath`;
	
	
	
	if (`window -exists smdOptWin` == 1)
		{
		deleteUI -window smdOptWin;
		}

	window -title "MESA - Maya Exporter for Source Absolute v2.0"

		-width 410
		-height 500
		-s 0
		-mnb true
		-mxb true
		smdOptWin;


columnLayout main;

string $tabs = `tabLayout -h 500 -w 400 -innerMarginWidth 15 -innerMarginHeight 15 -scr 1 -hst 16 -vst 16 -cr 1 -p main tlay`;

//create tab export
string $tab1 = `columnLayout -adj 1 -p tlay tab1`;

        columnLayout -p tab1 topLayout;
		//columnLayout -cal "left" -cat "both" 20 -cw 450 -rs 9;
		//	text -w 380 -label $destination  -align "center";
		
		setParent topLayout;
			columnLayout -cal "left" -cat "both" 15 -cw 370 -rs 10;

			text -label "" ;
			
			checkBox -label " Export Reference smd from Layer \"reference\"" 
				-value `getAttr smdInfo.smdRef`
				-onCommand "setAttr smdInfo.smdRef 1"
				-offCommand "setAttr smdInfo.smdRef 0"
				;
			checkBox -label " Export Physics smd from Layer \"physics\"" 
				-value `getAttr smdInfo.smdPhy` 
				-onCommand "setAttr smdInfo.smdPhy 1"
				-offCommand "setAttr smdInfo.smdPhy 0"
				;
			checkBox -label " Freeze and Reset Transforms (not with anims!)" 
				-value `getAttr smdInfo.smdFixTrans` 
				-onCommand "setAttr smdInfo.smdFixTrans 1"
				-offCommand "setAttr smdInfo.smdFixTrans 0"
				;
			
			checkBox -label " Combine and Smooth the Physics models" 
				-value `getAttr smdInfo.smdFixCol` 
				-onCommand "setAttr smdInfo.smdFixCol 1"
				-offCommand "setAttr smdInfo.smdFixCol 0"
				;
						
			checkBox -label " Export/Compile break models from Layer : " 
				-value `getAttr smdInfo.smdBreak` 
				-onCommand "setAttr smdInfo.smdBreak 1"
				-offCommand "setAttr smdInfo.smdBreak 0"
				;
			text -label "      \"ref_break*\" and \"phy_break*\"" ;

			checkBox -label " Export LOD Models from Layer \"LOD_range\"" 
				-value `getAttr smdInfo.qcLOD` 
				-onCommand "setAttr smdInfo.qcLOD 1"
				-offCommand "setAttr smdInfo.qcLOD 0"
				;
						
			checkBox -label " Export 1 frame Idle smd" 
				-value `getAttr smdInfo.smdIdle` 
				-onCommand "setAttr smdInfo.smdIdle 1"
				-offCommand "setAttr smdInfo.smdIdle 0"
				;
			checkBox -label " Export Animation SMDs" 
				-value `getAttr smdInfo.smdAni` 
				-onCommand "setAttr smdInfo.smdAni 1"
				-offCommand "setAttr smdInfo.smdAni 0"
				;
			checkBox -label " Export Textures ( Vtex )" 
				-value `getAttr smdInfo.Tex` 
				-onCommand "setAttr smdInfo.Tex 1"
				-offCommand "setAttr smdInfo.Tex 0"
				;
			checkBox -label " Generate a new QC script (refresh it)" 
				-value `getAttr smdInfo.fullCompile` 
				-onCommand "setAttr smdInfo.fullCompile 1"
				-offCommand "setAttr smdInfo.fullCompile 0"
				;
			checkBox -label " Compile QC" 
				-value `getAttr smdInfo.compile` 
				-onCommand "setAttr smdInfo.compile 1"
				-offCommand "setAttr smdInfo.compile 0"
				;
			checkBox -label " Body groups from \"reference\" Layer" 
				-value `getAttr smdInfo.seperateBodyGroup` 
				-onCommand "setAttr smdInfo.seperateBodyGroup 1"
				-offCommand "setAttr smdInfo.seperateBodyGroup 0"
				sep;
			checkBox -label " HLMV Thumbnail" 
				-value `getAttr smdInfo.Thumb` 
				-onCommand "setAttr smdInfo.Thumb 1"
				-offCommand "setAttr smdInfo.Thumb 0"
				;
			//text -label "" ;

//create Tab path settings

string $tab2 = `columnLayout -adj 1 -p tlay tab2`;
			columnLayout -p tab2 top;
				string $smdTarget;
				string $texFolder;
				string $smdPhy;
				string $smdIdle;
				string $output;
				
				$smdTarget=`getAttr smdInfo.smdTarget`;
				$texFolder=`getAttr smdInfo.texPath`;

	
				rowLayout -nc 1 -width 370 ;
					text -vis 1 
						-label "SMD / QC Path"
						-align "left" ;
				
				setParent top;

			columnLayout -p tab2 smdtarget;
				rowLayout -nc 1 -width 370 ;
					textField -w 370 
						-text $smdTarget 
						-editable 1 
						-cc "updateNode;" 
						smd;
									

				setParent smdtarget;
				
			columnLayout -p tab2 vtex;
					
				rowLayout -nc 1 -width 370 ;
					text -vis 1 
						-label "Materials/Textures Path"
						-align "left" ;
				
				setParent vtex;
							
			columnLayout -p tab2 texfolder;
				rowLayout -nc 1 -width 370 ;
					textField -w 570
						-text $texFolder 
						-cc " " 
						tex;
					
				$smdPhy = `substitute ".[Ss][Mm][Dd]" $smdTarget "_phy.smd"`;
				$smdIdle = `substitute ".[Ss][Mm][Dd]" $smdTarget "_idle.smd"`;
					text -label " " -p texfolder;
				//$output = "Physics Name   ";// + $smdPhy;
					text -w 370 -label " Physics Name:" -align "left" -p texfolder phy; // phy;
					text -label " " -p texfolder;
					text -label $smdPhy -p texfolder;
					text -label " " -p texfolder;
				//	text -label " " -p texfolder;

				//$output = "IDLE Name       ";// + $smdIdle;
					text -w 370 -label " IDLE Name: " -align "left" -p texfolder idle; // idle;
					text -label " " -align "right" -p texfolder;
					text -label $smdIdle -p texfolder;
					text -label " " -p texfolder;
				button -label "GENERATE PATHS" -width 380 -align "left" 
					-c "updatePaths;" 
					-p texfolder;

					text -label " " -p texfolder;

				setParent texfolder;

			separator -h 10 -w 370;

			columnLayout -p tab2 sourcecheckpath;
				rowLayout -nc 1 -width 370 ;
					
					text -label " " -p sourcecheckpath;
				//Define String
				string $sourceBinPathString = `getenv SOURCE_BIN_PATH`;
				string $GameProjectSource = `getenv GAME_PROJECT_SRC`;
				string $GameProjectName = `getenv GAME_PROJECT_NAME`;				
				string $GameProjectPath = `getenv GAME_PROJECT`;	
				string $VProjectPath = `getenv VPROJECT`;	

				
				
				
					text -label " Source Bin Path :" -w 370 -align left -p sourcecheckpath; 
					text -label $sourceBinPathString -w 370 -p sourcecheckpath; 
					
					text -label " " -w 370 -p sourcecheckpath;

					text -label " Game Project Source :" -w 370 -align left -p sourcecheckpath; 
					text -label $GameProjectSource -w 370 -p sourcecheckpath; 

					text -label " " -w 370 -p sourcecheckpath;

					text -label " GAME Project Name :" -w 370 -align left -p sourcecheckpath; 
					text -label $GameProjectName -w 370 -p sourcecheckpath; 
					
					text -label " " -w 370 -p sourcecheckpath;

					text -label " GAME_PROJECT :" -w 370 -align left -p sourcecheckpath; 
					text -label $GameProjectPath -w 370 -p sourcecheckpath; 
					
					text -label " " -w 370 -p sourcecheckpath;

					text -label " VPROJECT Path :" -w 370 -align left -p sourcecheckpath; 
					text -label $VProjectPath -w 370 -p sourcecheckpath; 

				setParent sourcecheckpath;

// QC Script Tab
string $tab3 = `columnLayout -adj 1 -p tlay tab3`;
			
			rowLayout -nc 2 -columnWidth2 60 340 -co2 2 2 -p tab3 scale;
				text -vis 1 -label "Scale" -align "right" -p scale;
				textField -w 60 -cc "setAttr smdInfo.qcScale -type \"string\" `textField -q -text qcScale`" -text `getAttr smdInfo.qcScale` -p scale qcScale;

			rowLayout -nc 2 -columnWidth2 60 340 -co2 2 2 -p tab3 surfprop;
				text -vis 1 -label "Surfaceprop" -align "right" -p surfprop;
				textScrollList -w 280 -sc "setAttr smdInfo.qcSurface -type \"string\" `textScrollList -q -si qcSurf`" -p surfprop qcSurf;

				//separator -h 10 -w 370;

			rowLayout -nc 2 -columnWidth2 60 340 -co2 2 2 -p tab3 massvalue;
				text -vis 1 -label "Mass" -align "right" -p massvalue;
				textField -w 60 -cc "setAttr smdInfo.qcMass -type \"string\" `textField -q -text qcMass`" -text `getAttr smdInfo.qcMass` -p massvalue qcMass;
			
			rowLayout -nc 2 -columnWidth2 60 360 -co2 2 2 -p tab3 keyvalues;
				text -vis 1 -label "Keyvalue" -align "right" -p keyvalues;
				textScrollList -w 280 -sc "setAttr smdInfo.qcKey -type \"string\" `textScrollList -q -si qcKey`" -p keyvalues qcKey;
				propList;

		//	text -vis 1 -label "add to end of QC File" -align "left" -p tab3;
		//	scrollField -w 600 -h 200 -text `getAttr smdInfo.qcAdd` -cc "setAttr smdInfo.qcAdd -type \"string\" `scrollField -q -text qcAdd`" -p tab3 qcAdd;

			//rowLayout -nc 2 -columnWidth2 60 360 -co2 2 2 -p tab3 surfprops;
			rowLayout -nc 2 -cat 1 "left" 60 -columnWidth2 240 400 -p tab3 surfprops;
				checkBox -label "$staticprop"
					-value `getAttr smdInfo.qcStatic` 
					-onCommand "setAttr smdInfo.qcStatic 1;setAttr smdInfo.seperateBodyGroup 0;checkBox -e -value 0 sep"
					-offCommand "setAttr smdInfo.qcStatic 0"
					-align "left"
					;

				checkBox -label "Allow prop_static" 
					-value `getAttr smdInfo.qcAllowStatic` 
					-onCommand "setAttr smdInfo.qcAllowStatic 1;checkBox -e -value 0 sep" //smdInfo.seperateBodyGroup 0; //removed
					-offCommand "setAttr smdInfo.qcAllowStatic 0"
					-align "right"
					;

/*			rowLayout -numberOfColumns 6 -cw6 30 30 100 140 60 300 -co6 6 6 6 6 6 6 -p tab3 tt2;
				text -vis 1 -label "Mass" -align "right" -p tt2;
				textField -w 30 -cc "setAttr smdInfo.qcMass -type \"string\" `textField -q -text qcMass`" -text `getAttr smdInfo.qcMass` -p tt2 qcMass;
				checkBox -label "Static Prop" 
					-value `getAttr smdInfo.qcStatic` 
					-onCommand "setAttr smdInfo.qcStatic 1;setAttr smdInfo.seperateBodyGroup 0;checkBox -e -value 0 sep"
					-offCommand "setAttr smdInfo.qcStatic 0"
					-align "right"
					;
*/
			
			
		//	rowLayout -numberOfColumns 6 -cw6 30 30 60 140 60 300 -co6 6 6 6 6 6 6 -p tab3 tt1;
			//	text -vis 1 -label "Scale" -align "right" -p tt1;
			//	textField -w 30 -cc "setAttr smdInfo.qcScale -type \"string\" `textField -q -text qcScale`" -text `getAttr smdInfo.qcScale` -p tt1 qcScale;
				
			//	text -vis 1 -label "Surfaceprop" -align "right" -p tt1;
			//	textScrollList -w 120 -sc "setAttr smdInfo.qcSurface -type \"string\" `textScrollList -q -si qcSurf`" -p tt1 qcSurf;
				
				
		//		text -vis 1 -label "Keyvalue" -align "right" -p tt1;
		//		textScrollList -w 300 -sc "setAttr smdInfo.qcKey -type \"string\" `textScrollList -q -si qcKey`" -p tt1 qcKey;
		//		propList;
			
		//	text -vis 1 -label "add to end of QC File" -align "left" -p tab3;
		//	scrollField -w 600 -h 200 -text `getAttr smdInfo.qcAdd` -cc "setAttr smdInfo.qcAdd -type \"string\" `scrollField -q -text qcAdd`" -p tab3 qcAdd;

/*
string $tab3 = `columnLayout -adj 1 -p tlay tab3`;
			
			rowLayout -numberOfColumns 6 -cw6 30 30 100 140 60 300 -co6 6 6 6 6 6 6 -p tab3 tt2;
				text -vis 1 -label "Mass" -align "right" -p tt2;
				textField -w 30 -cc "setAttr smdInfo.qcMass -type \"string\" `textField -q -text qcMass`" -text `getAttr smdInfo.qcMass` -p tt2 qcMass;
			checkBox -label "Static Prop" 
				-value `getAttr smdInfo.qcStatic` 
				-onCommand "setAttr smdInfo.qcStatic 1;setAttr smdInfo.seperateBodyGroup 0;checkBox -e -value 0 sep"
				-offCommand "setAttr smdInfo.qcStatic 0"
				-align "right"
				;
			
							
			rowLayout -numberOfColumns 6 -cw6 30 30 60 140 60 300 -co6 6 6 6 6 6 6 -p tab3 tt1;
				text -vis 1 -label "Scale" -align "right" -p tt1;
				textField -w 30 -cc "setAttr smdInfo.qcScale -type \"string\" `textField -q -text qcScale`" -text `getAttr smdInfo.qcScale` -p tt1 qcScale;
				
				text -vis 1 -label "Surfaceprop" -align "right" -p tt1;
				textScrollList -w 120 -sc "setAttr smdInfo.qcSurface -type \"string\" `textScrollList -q -si qcSurf`" -p tt1 qcSurf;
				
				
				text -vis 1 -label "Keyvalue" -align "right" -p tt1;
				textScrollList -w 300 -sc "setAttr smdInfo.qcKey -type \"string\" `textScrollList -q -si qcKey`" -p tt1 qcKey;
				propList;
			
			text -vis 1 -label "add to end of QC File" -align "left" -p tab3;
			scrollField -w 600 -h 200 -text `getAttr smdInfo.qcAdd` -cc "setAttr smdInfo.qcAdd -type \"string\" `scrollField -q -text qcAdd`" -p tab3 qcAdd;
*/

// QC EDIT TAB
string $tab4 = `columnLayout -adj 1 -p tlay tab4`;
			
				text -vis 1 -label "add to the Top of QC File" -align "left" -p tab4;
				scrollField -w 600 -h 200 -text `getAttr smdInfo.qcHeader` -cc "setAttr smdInfo.qcHeader -type \"string\" `scrollField -q -text qcHeader`" -p tab4 qcHeader;

				text -vis 1 -label "add to end of QC File" -align "left" -p tab4;
				scrollField -w 600 -h 200 -text `getAttr smdInfo.qcFooter` -cc "setAttr smdInfo.qcFooter -type \"string\" `scrollField -q -text qcFooter`" -p tab4 qcFooter;


string $tab5 = `columnLayout -adj 1 -p tlay tab5`;
		
			rowLayout -numberOfColumns 1 -w 370 -p tab5 t1;
				text -vis 1 -label "Animation Name" -align "left" -p t1;
				setParent tab5;
			columnLayout -p tab5 t2;
				rowLayout -nc 1 -w 370 -p t2;

					textScrollList -w 360 -h 200 -p t2 -ams false -sc "$sa = `textScrollList -q -sii aniName`;int $s = $sa[0];updateAniItem($s);" aniName;
					updateAni;
					setParent t2;

			rowLayout -numberOfColumns 2 -cw2 80 270 -co2 6 6 -p tab5 t3;	
								
				columnLayout -p t3 c1;
					rowLayout -nc 2 -cw2 80 275 -co2 6 6 -p c1 r1;
						text -vis 1 -label "Sequence Name" -align "right" -p r1;
						textField -w 275 -cc "" -p r1 aniNameField;
												
					rowLayout -nc 4 -cw4 80 100 75 95 -co4 6 6 6 6 -p c1 r2;
						text -vis 1 -label "Sequence Start" -align "right" -p r2;
						textField -w 95 -cc " " -p r2 aniStart;
						text -vis 1 -label "  Sequence End" -align "right" -p r2;
						textField -w 95 -cc " " -p r2 aniEnd;
					
					rowLayout -nc 2 -cw2 80 274 -co2 6 6 -p c1 r4;
						text -vis 1 -label "Add to the End" -align "right" -p r4;
						textField -w 274 -cc "" -p r4 aniAdd;
						
					rowLayout -nc 3 -cw3 100 100 100 -co3 6 6 6 -ct3 "both" "both" "both" -p c1 r3;
						
						button -label "Add" -c "addAniItem;" -p r3;
						button -label "edit" -c "$sa = `textScrollList -q -sii aniName`;int $s = $sa[0];saveAniItem($s);" -p r3;
						button -label "del" -c "$it = `textScrollList -q -sii aniName`;int $i = $it[0];delAniItem($i);" -p r3;
				

/*
string $tab4 = `columnLayout -adj 1 -p tlay tab4`;
			rowLayout -numberOfColumns 2 -cw2 150 400 -co2 6 6 -p tab4 t1;
				text -vis 1 -label "Animation Name" -align "left" -p t1;
				text -vis 1 -label "Animation Settings" -align "left" -p t1;
			
			rowLayout -numberOfColumns 2 -cw2 150 400 -co2 6 6 -p tab4 t2;	
				
							
				textScrollList -w 140 -h 200 -p t2 -ams false -sc "$sa = `textScrollList -q -sii aniName`;int $s = $sa[0];updateAniItem($s);" aniName;
				updateAni;
									
				
				columnLayout -p t2 c1;
					rowLayout -nc 2 -cw2 100 50 -co2 6 6 -p c1 r1;
						text -vis 1 -label "sequence Name" -align "right" -p r1;
						textField -w 50 -cc "" -p r1 aniNameField;
												
				
				
					rowLayout -nc 4 -cw4 100 50 100 50 -co4 6 6 6 6 -p c1 r2;
						text -vis 1 -label "sequence Start" -align "right" -p r2;
						textField -w 50 -cc " " -p r2 aniStart;
						text -vis 1 -label "sequence End" -align "right" -p r2;
						textField -w 50 -cc " " -p r2 aniEnd;
					
					rowLayout -nc 2 -cw2 100 200 -co2 6 6 -p c1 r4;
						text -vis 1 -label "add on end" -align "right" -p r4;
						textField -w 200 -cc "" -p r4 aniAdd;
						
					rowLayout -nc 3 -cw3 100 100 100 -co3 6 6 6 -ct3 "both" "both" "both" -p c1 r3;
						
						button -label "Add" -c "addAniItem;" -p r3;
						button -label "edit" -c "$sa = `textScrollList -q -sii aniName`;int $s = $sa[0];saveAniItem($s);" -p r3;
						button -label "del" -c "$it = `textScrollList -q -sii aniName`;int $i = $it[0];delAniItem($i);" -p r3;
				
*/

// Help Tab
string $tab6 = `columnLayout -adj 1 -p tlay tab6`;
				string $help;
				$help += " -----===== MESA by Nicolas Kirsch =====-----\n";
				$help += "  Maya Exporter for Source Absolute v2.0 ----\n";
				$help += "  WebSite http://www.puppet-master.com/ -----\n";
				$help += "  Credits: Valve software, Prall, and ------\n";
				$help += " --------  Nicolas Kirsch, Martin Niehoff --\n";
				$help += " --------------------------------------------\n";
				$help += "\n";
				$help += "\n";
				$help += "INSTRUCTIONS :\n";
				$help += "\n";
				$help += " -Paths\n";
				$help += "  Maya Scene path: '/Mesa/scenes/' \n";
				$help += "  The path must lies with '/modelsrc/'\n";
				$help += "  ex :'/Mesa/Scenes/' directory.\n";
				$help += "  \n";
				$help += "  If the Folder doesn't exists, Create it !\n";
				$help += "\n";
				$help += "  SMD Export Path: 'Mesa/modelsrc/'\n";
				$help += "\n";
				$help += "  MDL Path: '%GAME_PROJECT%/models/'\n";
				$help += "\n";
				$help += "  TGA Path: 'Mesa/materialsrc/'\n";
				$help += "\n";
				$help += "  VTF Path: '%GAME_PROJECT%/materials/'\n";
				$help += "\n";
				$help += "\n";
				$help += " --------------------------------------------\n";
				$help += "\n";
				$help += " -No undo before export\n";
				$help += "  Save before or maya will crash\n";
				$help += "\n";
				$help += " -Unique shape names\n";
				$help += "  Do not use dupe shape names\n";
				$help += "\n";
				$help += " -Steam\n";
				$help += "  Make sure it is running or export wont work\n";
				$help += "\n";
				$help += " -Textures\n";
				$help += "  Make sure the tgas have a resolution power of 2\n";
				$help += "  you can use bumpmaps or normal maps connected\n";
				$help += "  to bump of PhongE shader\n";
				$help += "  just name them *_normal for correct\n";
				$help += "  export.\n";
				$help += "\n";
				$help += "Export Tab Options:\n";  
				$help += "\n";
				$help += " -Export Reference smd from Layer \"reference\"\n";
				$help += "  Only uncheck if it already exists\n";
				$help += "  (to speed recompile)\n";
				$help += "\n";
				$help += " -Export Physics smd from Layer \"physics\"\n";
				$help += "  Only uncheck if it already exists\n";
				$help += "  (to speed recompile)\n";
				$help += "\n";
				$help += " -Freeze and reset transforms\n";
				$help += "  Better not use that..freeze transform and reset\n";
				$help += "  for every mesh in the scene\n";
				$help += "\n";
				$help += " -Combine and smooth collision meshes\n";
				$help += "  $collisionmodels seem to need a single node.\n";
				$help += "  This combines multiple collision meshes and\n";
				$help += "  combines them (per layer) and smoothes edges.\n";
				$help += "  Good if you just copy around some primitives\n";
				$help += "  as collision model\n";
				$help += "\n";
				$help += " -Export/compile break models from Layer\n";
				$help += "  Exports break smd's form Layers \n";
				$help += "  named \"ref_break*\" and \"phy_break*\".\n";
				$help += "   Example :\n";
				$help += "    ref_break01 > phy_break01\n";
				$help += "    ref_break02 > phy_break02\n";
				$help += "    etc.\n";
				$help += "  Creates qc's with same settings as base, \n";
				$help += "  compiles and adds break commands to base qc.\n";
				$help += "\n";
				$help += " -Export LOD Models from Layer \"LOD_range\"\n";
				$help += "  Creates a LOD model for each Layer called\n";
				$help += "  LOD_range where range is the min distance\n";
				$help += "  for this LOD Model\n";
				$help += "\n";
				$help += " -Export 1 frame Idle smd\n";
				$help += "  Use it to create dummy animation smd.\n";
				$help += "  Uncheck if you have your own idle animation in\n";
				$help += "  Animation Tab. It doesnt affec the dummy idle\n";
				$help += "  from break models, just the base model.\n";
				$help += "\n";
				$help += " -Export Animation smds\n";
				$help += "  Exports Animations set in Animations Tab.\n";
				$help += "\n";
				$help += " -Export Textures\n";
				$help += "  Exports Textures.\n";
				$help += "\n";
				$help += " -Generate QC\n";
				$help += "  Uncheck if you want to use your own qc,\n";
				$help += "  but compile will fail if the correct named\n";
				$help += "  (scenename.qc) and working qc doesnt exist.\n";
				$help += "\n";
				$help += " -Compile\n";
				$help += "  Run studiomdl\n";
				$help += "\n";
				$help += " -Body groups from \"reference\" Layer\n";
				$help += "  Generates bodygroups from the reference layer.\n";
				$help += "  It uses each mesh as body group with this\n";
				$help += "  mesh as submodel and a blank one.\n";
				$help += "  Mesh named \"main\" will be used as base mesh,\n";
				$help += "  if there is nomesh named main in the reference,\n";
				$help += "  layer base mesh will be the first mesh\n";
				$help += "  NOTE: gets turned off when using staticprop.\n";
				$help += "\n";
				$help += " -HLMV Thumbnail\n";
				$help += "  Renders a 640 x 480 jpg from framed\n";
				$help += "  perspective view to the mdl location\n";
				$help += "  as model icon in HLMV.\n";
				$help += "  Make sure you have a bright light in scene.\n";
				$help += "  default turns out too dark\n";
				$help += "\n";
				$help += "\n";
				$help += "Path Settings:\n";
				$help += "\n";
				$help += " -SMD / QC Path\n";
				$help += "  This is the models source path.\n";
				$help += "  this field must contain /modelsrc/\n";
				$help += "  The Maya Scene should be save\n";
				$help += "  into the same folder.\n";
				$help += "\n";
				$help += " -Texture Path:\n";
				$help += "  This is the textures source root path.\n";
				$help += "  It must have /materialsrc/ at the end, exact\n";
				$help += "  paths are take from the Texturefile Nodes\n";
				$help += "  (tga files).\n";
				$help += "\n";
				$help += " -Default\n";
				$help += "  This resets paths to default.\n";
				$help += "  Both paths are taken form the scene file path\n";
				$help += "  (works only with saved scene in /scenes/ dir).\n";
				$help += "  NOTE: The target paths are generated from the\n";
				$help += "  vproject environment variable and the relative\n";
				$help += "  paths from texturefile nodes and smd/qc path.\n";
				$help += "\n";
				$help += "QC Settings:\n";
				$help += "\n";
				$help += " -Mass\n";
				$help += "  Mass for collisionmodel in Kilo.\n";
				$help += "\n";
				$help += " -Staticprop\n";
				$help += "  Sets staticprop in qc, disables seperate\n";
				$help += "  body groups, overrides keyvalues.\n";
				$help += "\n";
				$help += " -Scale\n";
				$help += "  Guess what...scale factor.\n";
				$help += "\n";
				$help += " -Surfaceprop\n";
				$help += "  Select what u think might fit\n";
				$help += "\n";
				$help += " -Keyvalues\n";
				$help += "  Select one from the list\n";
				$help += "\n";
				$help += " -Add to end of QC File\n";
				$help += "  Anything u write there will be added to\n";
				$help += "  the end of base qc file\n";
				$help += "\n";
				$help += "Animations:\n";
				$help += "\n";
				$help += " -Sequence Name\n";
				$help += "  Name of the sequence\n";
				$help += "\n";
				$help += " -Start frame\n";
				$help += "  Start frame in timeline for this sequence\n";
				$help += "\n";
				$help += " -End frame\n";
				$help += "  End frame in timeline for this sequence\n";
				$help += "\n";
				$help += " -Add on end\n";
				$help += "  End of the sequence line...add your framerate,\n";
				$help += "  rotation, events, whatever here\n";
				$help += "\n";
				$help += " -Add\n";
				$help += "  Adds sequence with current Animation Settings\n";
				$help += "\n";
				$help += " -Edit\n";
				$help += "  Save Animation Settings changes for\n";
				$help += "  selected Sequence\n";
				$help += "\n";
				$help += " -Del\n";
				$help += "  Remove selected sequence\n";
				$help += "\n";
				$help += "\n";
								
				scrollField -w 360 -h 466 -text $help -ed 0 -p tab6;



rowLayout -numberOfColumns 4 
					-height 32
					//-cw4 130 130 130 130
					-cw4 95 95 95 95
					-ct4 "both" "both" "both" "both"
					-co4 1 1 1 1
		 			-p main;
					button -label "OK settings" -c "updateNode;deleteUI -window smdOptWin;" -align "center";
					button -label "Full Compile" -c "updateNode;deleteUI -window smdOptWin; smdExport( 3, `getAttr smdInfo.seperateBodyGroup` )" -align "center";
					button -label "Export only" -c "updateNode;deleteUI -window smdOptWin; smdExport( `getAttr smdInfo.smdType`, `getAttr smdInfo.seperateBodyGroup` )" -align "center";
					button -label "Cancel" -c "deleteUI -window smdOptWin" -align "center";	

tabLayout -edit
-tabLabel $tab1 "Export" 
-tabLabel $tab2 "Paths"
-tabLabel $tab3 "QC Script"
-tabLabel $tab4 "QC Edit"
-tabLabel $tab5 "Animations"
-tabLabel $tab6 "Help"

$tabs;


					
	showWindow smdOptWin;
	};